http:
  routers:
    authentication-router:
      rule: "Host(`workflow.auth`)"
      service: "authentication-service"
      middlewares:
        - "cors-headers"
      entryPoints:
        - "web"
    buckets-router:
      rule: "Host(`workflow.buckets`)"
      service: "buckets-service"
      middlewares:
        - cors-auth-chain
      entryPoints:
        - "web"
    results-router:
      rule: "Host(`workflow.results`)"
      service: "results-service"
      middlewares:
        - rate-limit
        - cors-auth-chain
      entryPoints:
        - "web"
    pipelines-router:
      rule: "Host(`workflow.pipelines`)"
      service: "pipelines-service"
      middlewares:
        - cors-auth-chain
      entryPoints:
        - "web"

  middlewares:
    authentication-middleware:
      forwardAuth:
        address: "http://authentication:4000/v1/check"
        authRequestHeaders:
          - "x-access-token"
        trustForwardHeader: true
    basic-auth:
      basicAuth:
        users:
          - "chimefrb:$apr1$dDchLEPm$xTyMeT2JZw3PFzpywpfs81"
    rate-limit:
      rateLimit:
        average: 1
        period: 1s
    cors-headers:
      headers:
        accessControlAllowMethods:
          - "GET"
          - "OPTIONS"
          - "PUT"
          - "POST"
        accessControlAllowHeaders: "*"
        accessControlAllowOriginList:
          - "*"
        accessControlMaxAge: 100
        addVaryHeader: true
    cors-auth-chain:
      chain:
        middlewares:
          - "cors-headers"
          - "basic-auth"
          # - "authentication-middleware"

  services:
    authentication-service:
      loadBalancer:
        servers:
          - url: "http://authentication:4000"
    buckets-service:
      loadBalancer:
        servers:
          - url: "http://buckets:8004"
    results-service:
      loadBalancer:
        servers:
          - url: "http://results:8005"
    pipelines-service:
      loadBalancer:
        servers:
          - url: "http://pipelines:8006"
